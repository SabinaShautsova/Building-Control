{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabina\\\\BuildingControl\\\\frontend\\\\src\\\\components\\\\BuildingList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchBuildings } from '../api';\nimport { Button, Card, CardContent, Typography, IconButton, Box } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SortIcon from '@mui/icons-material/Sort';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuildingList() {\n  _s();\n  const [buildings, setBuildings] = useState([]);\n  const [error, setError] = useState(null);\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' for ascending, 'desc' for descending\n\n  useEffect(() => {\n    const getBuildings = async () => {\n      try {\n        const data = await fetchBuildings();\n        setBuildings(data);\n      } catch (err) {\n        setError('Failed to fetch buildings');\n      }\n    };\n    getBuildings();\n  }, []);\n\n  // Function to toggle sorting order\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  // Sorting buildings by name \n  const sortedBuildings = [...buildings].sort((a, b) => {\n    if (sortOrder === 'asc') {\n      return a.name.localeCompare(b.name);\n    } else {\n      return b.name.localeCompare(a.name);\n    }\n  });\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Buildings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleSortOrder,\n      \"aria-label\": \"sort\",\n      children: [/*#__PURE__*/_jsxDEV(SortIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        style: {\n          marginLeft: '5px'\n        },\n        children: [\"Sort by Name (\", sortOrder === 'asc' ? 'A-Z' : 'Z-A', \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), sortedBuildings.map(building => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(HomeIcon, {\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), building.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Location: \", building.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Target Temperature: \", building.targetTemperature || 'N/A', \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: `/buildings/${building._id}`,\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              marginLeft: 'auto'\n            },\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, building._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      component: Link,\n      to: \"/add-building\",\n      variant: \"outlined\",\n      color: \"primary\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this),\n      style: {\n        marginTop: '15px'\n      },\n      children: \"Add New Building\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(BuildingList, \"iLNI5CyhC8JfY3fZUtrUIaIaSwM=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchBuildings","Button","Card","CardContent","Typography","IconButton","Box","HomeIcon","SortIcon","AddIcon","jsxDEV","_jsxDEV","BuildingList","_s","buildings","setBuildings","error","setError","sortOrder","setSortOrder","getBuildings","data","err","toggleSortOrder","sortedBuildings","sort","a","b","name","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","onClick","style","marginLeft","map","building","marginBottom","display","justifyContent","alignItems","marginRight","location","targetTemperature","component","to","_id","color","startIcon","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Sabina/BuildingControl/frontend/src/components/BuildingList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchBuildings } from '../api';\r\nimport { Button, Card, CardContent, Typography, IconButton, Box } from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SortIcon from '@mui/icons-material/Sort';\r\nimport AddIcon from '@mui/icons-material/Add'\r\n\r\nfunction BuildingList() {\r\n  const [buildings, setBuildings] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' for ascending, 'desc' for descending\r\n\r\n  useEffect(() => {\r\n    const getBuildings = async () => {\r\n      try {\r\n        const data = await fetchBuildings();\r\n        setBuildings(data);\r\n      } catch (err) {\r\n        setError('Failed to fetch buildings');\r\n      }\r\n    };\r\n    getBuildings();\r\n  }, []);\r\n\r\n  // Function to toggle sorting order\r\n  const toggleSortOrder = () => {\r\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n  };\r\n\r\n  // Sorting buildings by name \r\n  const sortedBuildings = [...buildings].sort((a, b) => {\r\n    if (sortOrder === 'asc') {\r\n      return a.name.localeCompare(b.name);\r\n    } else {\r\n      return b.name.localeCompare(a.name);\r\n    }\r\n  });\r\n\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" gutterBottom>Buildings</Typography>\r\n\r\n      <IconButton onClick={toggleSortOrder} aria-label=\"sort\">\r\n        <SortIcon />\r\n        <Typography variant=\"body2\" style={{ marginLeft: '5px' }}>\r\n          Sort by Name ({sortOrder === 'asc' ? 'A-Z' : 'Z-A'})\r\n        </Typography>\r\n      </IconButton>\r\n\r\n      {sortedBuildings.map((building) => (\r\n        <Card key={building._id} variant=\"outlined\" style={{ marginBottom: '10px' }}>\r\n          <CardContent>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <div>\r\n                <Typography variant=\"h6\">\r\n                  <HomeIcon style={{ marginRight: '5px' }} />\r\n                  {building.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\">Location: {building.location}</Typography>\r\n                <Typography variant=\"body2\">Target Temperature: {building.targetTemperature || 'N/A'}Â°C</Typography>\r\n              </div>\r\n              <Button\r\n                component={Link}\r\n                to={`/buildings/${building._id}`}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginLeft: 'auto' }}\r\n              >\r\n                View Details\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n\r\n      <Button\r\n        component={Link}\r\n        to=\"/add-building\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        style={{ marginTop: '15px' }}\r\n      >\r\n        Add New Building\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuildingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}