{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabina\\\\BuildingControl\\\\frontend\\\\src\\\\components\\\\BuildingList.js\",\n  _s = $RefreshSig$();\n// src/components/BuildingList.js\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchBuildings } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuildingList() {\n  _s();\n  const [buildings, setBuildings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getBuildings = async () => {\n      try {\n        const data = await fetchBuildings();\n        setBuildings(data);\n      } catch (err) {\n        setError('Failed to fetch buildings');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getBuildings();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Buildings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/buildings/${building._id}`,\n          children: building.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \" - \", building.location]\n      }, building._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add-building\",\n      children: \"Add New Building\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(BuildingList, \"jR4NVRnIdbn2uXe6varGINJTBAY=\");\n_c = BuildingList;\nexport default BuildingList;\nvar _c;\n$RefreshReg$(_c, \"BuildingList\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchBuildings","jsxDEV","_jsxDEV","BuildingList","_s","buildings","setBuildings","loading","setLoading","error","setError","getBuildings","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","building","to","_id","name","location","_c","$RefreshReg$"],"sources":["C:/Users/Sabina/BuildingControl/frontend/src/components/BuildingList.js"],"sourcesContent":["// src/components/BuildingList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchBuildings } from '../api';\r\n\r\nfunction BuildingList() {\r\n  const [buildings, setBuildings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getBuildings = async () => {\r\n      try {\r\n        const data = await fetchBuildings();\r\n        setBuildings(data);\r\n      } catch (err) {\r\n        setError('Failed to fetch buildings');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getBuildings();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Buildings</h1>\r\n      <ul>\r\n        {buildings.map((building) => (\r\n          <li key={building._id}>\r\n            <Link to={`/buildings/${building._id}`}>{building.name}</Link> - {building.location}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Link to=\"/add-building\">Add New Building</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuildingList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,cAAc,CAAC,CAAC;QACnCM,YAAY,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,2BAA2B,CAAC;MACvC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAY,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIT,KAAK,EAAE,oBAAOP,OAAA;IAAAY,QAAA,EAAIL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACEhB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhB,OAAA;MAAAY,QAAA,EACGT,SAAS,CAACc,GAAG,CAAEC,QAAQ,iBACtBlB,OAAA;QAAAY,QAAA,gBACEZ,OAAA,CAACH,IAAI;UAACsB,EAAE,EAAE,cAAcD,QAAQ,CAACE,GAAG,EAAG;UAAAR,QAAA,EAAEM,QAAQ,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,OAAG,EAACE,QAAQ,CAACI,QAAQ;MAAA,GAD5EJ,QAAQ,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLhB,OAAA,CAACH,IAAI;MAACsB,EAAE,EAAC,eAAe;MAAAP,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACd,EAAA,CApCQD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAsCrB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}