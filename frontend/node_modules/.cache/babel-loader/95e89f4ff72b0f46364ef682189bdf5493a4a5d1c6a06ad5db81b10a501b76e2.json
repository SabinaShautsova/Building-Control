{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabina\\\\BuildingControl\\\\frontend\\\\src\\\\components\\\\BuildingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createBuilding, updateBuilding, fetchBuildingById } from '../api';\nimport { Button, Slider, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuildingForm() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [location, setLocation] = useState('');\n  const [targetTemperature, setTargetTemperature] = useState(22);\n  const [error, setError] = useState(null);\n  const isEditing = Boolean(id);\n  const valuetext = value => `${value}°C`;\n  useEffect(() => {\n    if (isEditing) {\n      const getBuilding = async () => {\n        try {\n          const data = await fetchBuildingById(id);\n          setName(data.name);\n          setLocation(data.location);\n          setTargetTemperature(data.targetTemperature || 22);\n        } catch (err) {\n          setError('Failed to load building details');\n        }\n      };\n      getBuilding();\n    }\n  }, [id, isEditing]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const buildingData = {\n      name,\n      location,\n      targetTemperature\n    };\n    try {\n      if (isEditing) {\n        await updateBuilding(id, buildingData);\n      } else {\n        await createBuilding(buildingData);\n      }\n      navigate('/');\n    } catch (err) {\n      setError('Failed to save building');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      paddingLeft: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: id ? 'Edit Building' : 'Add Building'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Building Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"Adjust Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            \"aria-label\": \"Temperature Slider\",\n            value: targetTemperature,\n            onChange: (e, newValue) => setTargetTemperature(newValue) // Update state on slider change\n            ,\n            getAriaValueText: valuetext // Use `valuetext` function here\n            ,\n            min: 0,\n            max: 50,\n            step: 1,\n            valueLabelDisplay: \"on\",\n            style: {\n              width: '250px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Target Temperature: \", targetTemperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          style: {\n            marginTop: '20px'\n          },\n          children: id ? 'Update Building' : 'Add Building'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(BuildingForm, \"axIOnJNapzuY/UDrI8l3TVrmfh8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BuildingForm;\nexport default BuildingForm;\nvar _c;\n$RefreshReg$(_c, \"BuildingForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","createBuilding","updateBuilding","fetchBuildingById","Button","Slider","Typography","Box","jsxDEV","_jsxDEV","BuildingForm","_s","id","navigate","name","setName","location","setLocation","targetTemperature","setTargetTemperature","error","setError","isEditing","Boolean","valuetext","value","getBuilding","data","err","handleSubmit","e","preventDefault","buildingData","sx","paddingLeft","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","required","style","marginTop","gutterBottom","newValue","getAriaValueText","min","max","step","valueLabelDisplay","width","color","_c","$RefreshReg$"],"sources":["C:/Users/Sabina/BuildingControl/frontend/src/components/BuildingForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { createBuilding, updateBuilding, fetchBuildingById } from '../api';\r\nimport { Button, Slider, Typography, Box } from '@mui/material';\r\n\r\nfunction BuildingForm() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [targetTemperature, setTargetTemperature] = useState(22);\r\n  const [error, setError] = useState(null);\r\n  const isEditing = Boolean(id);\r\n\r\n  const valuetext = (value) => `${value}°C`;\r\n  \r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      const getBuilding = async () => {\r\n        try {\r\n          const data = await fetchBuildingById(id);\r\n          setName(data.name);\r\n          setLocation(data.location);\r\n          setTargetTemperature(data.targetTemperature || 22);\r\n        } catch (err) {\r\n          setError('Failed to load building details');\r\n        }\r\n      };\r\n      getBuilding();\r\n    }\r\n  }, [id, isEditing]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const buildingData = { name, location, targetTemperature };\r\n\r\n    try {\r\n      if (isEditing) {\r\n        await updateBuilding(id, buildingData);\r\n      } else {\r\n        await createBuilding(buildingData);\r\n      }\r\n      navigate('/');\r\n    } catch (err) {\r\n      setError('Failed to save building');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ paddingLeft: '20px'}}>\r\n    <div>\r\n      <Typography variant=\"h4\">{id ? 'Edit Building' : 'Add Building'}</Typography>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Building Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label>Location:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div style={{ marginTop: '20px' }}>\r\n          <Typography gutterBottom>Adjust Temperature</Typography>\r\n          <Slider\r\n            aria-label=\"Temperature Slider\"\r\n            value={targetTemperature}\r\n            onChange={(e, newValue) => setTargetTemperature(newValue)} // Update state on slider change\r\n            getAriaValueText={valuetext} // Use `valuetext` function here\r\n            min={0}\r\n            max={50}\r\n            step={1}\r\n            valueLabelDisplay=\"on\"\r\n            style={{ width: '250px' }}\r\n          />\r\n          <Typography>Target Temperature: {targetTemperature}°C</Typography>\r\n        </div>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          style={{ marginTop: '20px' }}\r\n        >\r\n          {id ? 'Update Building' : 'Add Building'}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BuildingForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}